# Importing necessary libraries
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import metrics

# Load dataset (Iris dataset as an example)
iris = load_iris()
X = iris.data  # Features
y = iris.target  # Target variable (labels)

# Split dataset into training set and test set (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create Decision Tree classifier object
clf = DecisionTreeClassifier()

# Train the Decision Tree Classifier
clf = clf.fit(X_train, y_train)

# Make predictions on the test data
y_pred = clf.predict(X_test)

# Model accuracy
print("Accuracy:", metrics.accuracy_score(y_test, y_pred))

# Optional: Visualize the Decision Tree (requires graphviz)
from sklearn.tree import plot_tree
import matplotlib.pyplot as plt

plt.figure(figsize=(12,8))
plot_tree(clf, filled=True, feature_names=iris.feature_names, class_names=iris.target_names)
plt.show()
